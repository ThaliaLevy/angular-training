[-] comentário que considero importante;
[--] explicação ou incremento do comentário acima.

INSTRUÇÕES INICIAIS:
- 'ng new <nomeProjeto>' é usado para criar um projeto;
- 'ng serve' roda o projeto, podendo ser visualizado no navegador (ctrl + click no link que é disponibilizado após carregar);
- pasta 'app' é onde modificamos para mexer no projeto;
- 'node_modules' não pode ser salvo no repositorio remoto. é necessário usar o comando 'npm install' toda vez que clonar o repositorio para uma maquina local;
-- isso pode ser verificado no arquivo gitignore.

GERAL:
- condicionais devem ser realizadas na classe. evitar realizar no html;
- Output: exportar código para outro componente;
- EventEmitter é usado quando se quer utilizar uma função de um componente dentro de outro componente;
- utilizar interface para centralizar código e evitar repetição. Também torna obrigatório seguir o padrão estabelecido na interface;
- pipe operators: recursos para trabalhar com as strings nos templates;
- é preciso importar, em app modules, o 'FormsModule' para que se possa fazer two way binding;
-- não esquecer de acrescentar tb em imports no mesmo arquivo;


COMPONENTES:
- Angular (assim como outros frameworks como React, View) utiliza o reaproveitamento de componentes;
- buscar criar os componentes através do comando 'ng generate component components/<nomeDoComponente>' pois há exportações que são criadas de forma automática
no arquivo 'app.modules';
- utilizando componentes:
    1 - criar componente: ng generate component components/<nomeDoComponente> (dentro do projeto)
    2 - pegar seletor: 'selector' dentro de '@Component' (dentro do arquivo TS do componente criado)
    3 - colar dentro de uma tag no html
    4 - resultado será exibir o conteúdo do componente naquele espaço do html.

- seletores sempre terão 'app-' na frente;
- é possível criar variaveis e métodos dentro da classe (no arquivo .ts do componente);

VARIAVEIS:
- para utilizar variaveis do escopo maior para o menor, é preciso inserir na classe de exportação ts do escopo menor o @Input() com a respectiva variavel;
- caso a variavel não seja iniciada dentro da export, pode-se indicar que ela será "iniciada em breve" usando '!'. ex.: @Input() name!:String

